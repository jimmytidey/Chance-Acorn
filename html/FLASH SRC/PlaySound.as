package   {       import flash.display.Sprite;       import flash.events.MouseEvent;       import flash.net.URLLoader;       import flash.net.URLRequest;       import flash.events.Event;       import flash.utils.ByteArray;       import flash.media.Sound; 	 import flash.media.SoundChannel;	 import flash.media.SoundTransform;     import org.as3wavsound.WavSound;       import org.as3wavsound.WavSoundChannel;	 import org.as3wavsound.WavSoundPlayer;	 import flash.media.SoundLoaderContext;	      public final class PlaySound extends Sprite       {  	 	var soundUrl:String;		var soundType:String;		var repeats:String;		var repeatNumber:int;		var tts:WavSound;		var Mp3:Sound; 			 	var Mp3Channel:SoundChannel = new SoundChannel();		var WavChannel:WavSoundChannel; 		var nowPlaying:String = 'no';		var volumeLevel:Number; 		var playerTransform:SoundTransform;		        public final function PlaySound(soundUrl:String, repeats:String, volumeLevel:Number):void {  			this.volumeLevel = volumeLevel; 					 	this.soundUrl = soundUrl;						//decide if this is a wav or an mp3		 	var typeArray:Array; 				typeArray = this.soundUrl.split('.'); 			var arrayLastPosition:int = typeArray.length -1;						//play a wav			if (typeArray[arrayLastPosition] == 'wav') {				soundType='wav';				this.repeats = repeats;				loadWav(this.soundUrl);  			}						//play an mp3			else {				soundType='mp3';	            Mp3 = new Sound();				var context:SoundLoaderContext = new SoundLoaderContext(8000, true);				Mp3.load(new URLRequest(soundUrl),context);							 			}						//set the amount of repeating necessary 			if (repeats == 'yes') {repeatNumber=1000;}			else {repeatNumber = 1;}			trace("vol= "+volumeLevel);			playerTransform = new SoundTransform((volumeLevel/100));		}         private final function loadWav(wavUrl:String):void {               var urlRequest:URLRequest = new URLRequest(wavUrl);               var wav:URLLoader = new URLLoader();               wav.dataFormat = 'binary';               wav.load(urlRequest);             wav.addEventListener(Event.COMPLETE, playWav);           }            private final function playWav(e:Event):void {               tts = new WavSound(e.target.data as ByteArray);            }		 		 public function playBack() {					if (soundType == 'wav') {  					//tts.play(0, this.repeatNumber);				//WavChannel.soundTransform = playerTransform;				nowPlaying = 'true';			}						else {				Mp3Channel = Mp3.play(0, this.repeatNumber);				Mp3Channel.soundTransform =  playerTransform;				nowPlaying = 'true';			}		 }		 		 public function stopPlayBack() {		 				if (soundType == 'wav') { 				//	if (nowPlaying == 'true') {WavChannel.stop();} 			}						else {				if (nowPlaying == 'true') {Mp3Channel.stop();} 			}						nowPlaying = 'false';		 }		 	 }   }  